/**
 * Project:     inWidget: show pictures from instagram.com on your site!
 * File:        readme.txt
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of MIT license
 * http://inwidget.ru/MIT-license.txt
 *
 * @link http://inwidget.ru
 * @author Alexandr Kazarmshchikov
 * @version 1.1.8
 * @package inWidget
 *
 */

// ----------------------------------------
// Системные требования:
// ----------------------------------------

* PHP >= 5.4.0 с поддержкой библиотеки cURL

// ----------------------------------------
// Установка виджета на сайт:
// ----------------------------------------

1. Загрузите исходный код виджета в корень вашего сайта:

Для этого скачайте архив с исходным кодом виджета. Извлеките папку /inwidget из архива. 
Загрузите папку /inwidget в корень вашего сайта со всеми файлами внутри.

Примечание. Виджет использует относительные пути, поэтому вы можете загрузить его в любую папку, 
если у вас нет доступа к корню сайта. Не забудьте при этом изменить путь в IFRAME.

2. Установите права на запись для папки /inwidget/cache:

В папке /inwidget/cache виджет будет хранить кэшированные данные. 
Если для директории будут отсутствовать права на запись, вы увидите ошибку ERROR #101.

3. Настройте виджет:

Отредактируйте файл /inwidget/config.php
Вам потребуется указать логин Instgram.

Список параметров:

* LOGIN – логин аккаунта в инстаграм из которого будут транслироваться фотографии.
* HASHTAG – хэш-теги через запятую (например: girl, man). Если вы хотите транслировать фотографии других пользователей, либо вывести фотографии с очень специфичным тегом, используйте эту опцию. Выборка фотографий будет производиться со всего мира в порядке того, как фотографии были отмечены искомым тегом. Обратите внимание, что тулбар с аватаркой и статистикой будет автоматически скрыт.
* bannedLogins - логины заблокированных пользователей через запятую (например: mark18, kitty45). Фотографии перечисленных пользователей не будут выводиться в виджете при использовании поиска по хештегам.
* imgRandom - выводить фотографии в случайном порядке [ true / false ]
* imgCount – сколько фотографий запрашивать из Instagram. Влияет на размер кэша.
* cacheExpiration – через сколько часов обновлять кэш.
* cacheSkip – не использовать кэш [ true / false ]. Если присвоить true, то кэш будет проигнорирован и запросы к API будут отправляться при каждой загрузке виджета. Используйте эту опцию только для отладки.
* cachePath - путь к директории с кэш файлами
* skinDefault - скин виджета по умолчанию [default / modern-blue / modern-green / modern-red / modern-orange / modern-grey / modern-black / modern-violet / modern-yellow]
* skinPath - путь к деректории со скинами
* langDefault - язык виджета по умолчанию [ ru / en ]
* langAuto - автоматически определять язык пользователя [ true / false ]

Внимание! Если после первичной настройки вы решите изменить LOGIN или HASHTAG,
изменения вступят в силу только после удаления файла с кэшем или после того, как кэш устареет. 

4. Вставьте виджет в сайт с помощью следующего кода:

<!-- По умолчанию -->
<iframe src='/inwidget/index.php' scrolling='no' frameborder='no' style='border:none;width:260px;height:330px;overflow:hidden;'></iframe> 

Ещё примеры вставки с различным отображением виджета: 

<!-- Без профиля -->
<iframe src='/inwidget/index.php?toolbar=false' data-inwidget scrolling='no' frameborder='no' style='border:none;width:260px;height:320px;overflow:hidden;'></iframe>

<!-- Мини 1 -->
<iframe src='/inwidget/index.php?width=100&inline=2&view=12&toolbar=false' data-inwidget scrolling='no' frameborder='no' style='border:none;width:100px;height:320px;overflow:hidden;'></iframe>

<!-- Мини 2 -->
<iframe src='/inwidget/index.php?width=100&inline=1&view=3&toolbar=false' data-inwidget scrolling='no' frameborder='no' style='border:none;width:100px;height:320px;overflow:hidden;'></iframe>

<!-- Горизонтальная ориентация -->
<iframe src='/inwidget/index.php?width=800&inline=7&view=14&toolbar=false' data-inwidget scrolling='no' frameborder='no' style='border:none;width:800px;height:295px;overflow:hidden;'></iframe>

<!-- Крупные preview -->
<iframe src='/inwidget/index.php?width=800&inline=3&view=9&toolbar=false&preview=large' data-inwidget scrolling='no' frameborder='no' style='border:none;width:800px;height:850px;overflow:hidden;'></iframe> 

// ----------------------------------------
// Точная настройка отображения виджета:
// ----------------------------------------

Параметры передаются как GET переменные при обращении к скрипту виджета.
К примеру, чтобы уставить ширину виджета 600px и вывести в строку пять фотографий, нужно добавить соотвествующие параметры в URL к скрипту. Т.е.: /inwidget/index.php?width=600&inline=5 

Список параметров:

width – ширина виджета (по умолчанию 260px);
inline – количество фотографий в строке (по умолчанию 4 шт.);
view – сколько фотографий отображать в виджете (по умолчанию 12 шт., максимально 30 шт., можно исправить в config.php);
toolbar – отобразить тулбар с аватаркой и статистикой (значения true/false, по умолчанию true);
preview – размер и качество изображений (small – маленькие до 320px, large – большие до 640px, fullsize – полноразмерые, по умолчанию стоит large)
lang – язык виджета (значения ru/en, по умолчанию берутся настройки из config.php). Приоритет этого параметра выше чем для настроек в config.php.
skin – скин виджета (значения default / modern-blue / modern-green / modern-red / modern-orange / modern-grey / modern-black / modern-violet / modern-yellow). По умолчанию default. Приоритет этого параметра выше чем для настроек в config.php.
adaptive - адаптивный режим (значения true / false, по умолчанию false). Виджет будет автоматически подстраиваться под размеры блока или окна браузера.

При изменении ширины или количества фотографий не забудьте изменить размер iframe. 

// ----------------------------------------
// Как сделать виджет адаптивным?
// ----------------------------------------

Добавьте GET переменную "adaptive" при обращении к скрипту виджета.

Например: /inwidget/index.php?adaptive=true

Переменной необходимо присвоить значение true. 
После этого виджет будет автоматически подстраиваться под размеры блока или окна браузера. 
При этом GET параметр width будет проигнорирован. Параметр inline будет иметь эффект при ширине виджета более 400px. 
Ширина iframe увеличится до 100%, а высота подстроится под содержимое блока независимо от того, что вы изначально прописали в стилях iframe.

Посмотреть демонстрацию работы адаптивного режима: http://inwidget.ru/adaptive.php

Важно! Если вы используете старый код вставки iframe ( < 1.1.4 ), то вам необходимо прописать тегу атрибут data-inwidget
или использовать новый код из инструкции, иначе размеры iframe не будут меняться автоматически. 
И вам придётся самостоятельно указать длину блока и заботиться о его высоте.

Возможность актуальна для версии >= 1.1.4 

// ----------------------------------------
// Разработчикам плагинов и приложений:
// ----------------------------------------

Вы можете подключить код виджета и задать параметры через конструктор класса.
При использовании примера ниже будьте внимательны с путями к файлам.

require_once 'inwidget/plugins/autoload.php';
require_once 'inwidget/plugins/InstagramScraper.php';
require_once 'inwidget/plugins/unirest-php/Unirest.php';
require_once 'inwidget/inwidget.php';

$config = array(
	'LOGIN' => 'fotokto_ru',
	'HASHTAG' => '',
	'bannedLogins' => '',
	'imgRandom' => true,
	'imgCount' => 30,
	'cacheExpiration' => 6,
	'cacheSkip' => false,
	'cachePath' =>  $_SERVER['DOCUMENT_ROOT'].'/inwidget/cache/',
	'skinDefault' => 'default',
	'skinPath'=> '/inwidget/skins/',
	'langDefault' => 'ru',
	'langAuto' => false,
);
$inWidget = new inWidget($config);
$inWidget->getData();

/* You may change default values of properties */
/*
$inWidget->width = 800;
$inWidget->inline = 6;
$inWidget->view = 18;
$inWidget->toolbar = false;
$inWidget->preview = 'large';
$inWidget->adaptive = false;
$inWidget->skipGET = true; 	// skip GET variables to avoid name conflicts
$inWidget->setOptions(); 	// apply new values
*/

include 'inwidget/template.php';

Кроме того, вы можете переопределить в коде значение большинства свойств, которые по умолчанию передаются через GET переменные.

Обратите внимание, что:

* $inWidget->skipGET - отключает переопределение свойст класса через GET переменные (по умолчанию false)
* $inWidget->setOptions() - применяет новые значения свойст класса, если бы они были заданы в коде

Имейте ввиду, что отправка запросов и получение ответов от сервера Instagram занимает время. 
Кроме того, большая часть ошибок останавливает работу скрипта, а не бросает исключения. 
По этой причине код должен выполняться параллельно логике основного приложения, вызываясь через iframe или javascript.

Я крайне не советую включать виджет непосредственно в движки сайтов и приложения с бизнес-логикой, 
т.к. их работа может быть замедленна или полностью остановлена в следствии ошибки или неожиданного ответа от сервера Instagram.

// ----------------------------------------
// Коды ошибок:
// ----------------------------------------

[*] ERROR #101 - не удаётся получить доступ к файлу с кэшем. Нужно изменить права на директорию /inwidget/cache 

Если файл не существует, виджет пытается создать его. Если файл существует, виджет пытается открыть его на чтение и запись. 
Отсутствие прав на чтение или запись файлов в директорию /inwidget/cache вызовет ошибку. 
Если до изменения прав на директорию в ней уже был файл с кэшем, просто удалите его, т.к. на него также установлены некорректные права.

[*] ERROR #102 - не удаётся получить время последнего изменения файла. 

Возможно, данная функция ограниченна или не поддерживается файловой системой вашего сервера. 
Для того, чтобы определить, актуален ли ещё кэш, виджет использует время последнего изменения файла в папке /inwidget/cache. 
Если не удаётся определить время, кэш всегда будет неактуальным, что приведёт к постоянным запросам к API Instagram.

[*] ERROR #500 - Неизвестная ошибка

Для выяснения деталей смотрите, что было записано в кэш. Данная ошибка сгенерированна библиотекой instagram-php-scraper и в большинстве случаев означает проблемы при отправке или получении данных запроса от сервера Instagram.
Чтобы виджет попытался отправить запрос ещё раз, удалите файл с кэшем и обновите страницу на которой выводится виджет.

// ----------------------------------------
// История версий:
// ----------------------------------------

inWidget-1.1.8
Дата: 07 января 2018 г.

* Внесено множество улучшений для упрощения разработки плагинов и приложений на основе виджета.

inWidget-1.1.7
Дата: 06 января 2018 г.

* Обновлена библиотека instagram-php-scraper до версии 0.8.8.
* Внесены исправления в функцию getMediasByTag библиотеки instagram-php-scraper.
* Расположение кэш файла теперь можно изменить через config.php или конструктор класса.

inWidget-1.1.6
Дата: 05 декабря 2017 г.

* Обновлена библиотека instagram-php-scraper до версии 0.8.7.
* Внесены дополнительные исправления в функцию getMediasByTag библиотеки instagram-php-scraper.
* Внесены небольшие исправления в скин default

inWidget-1.1.5
Дата: 03 декабря 2017 г.

* Изменились имена кэш-файлов чтобы избежать конфликта имён при запросе данных по тегам, а также в многопользовательских сценариях использования.
* Добавлена фильтрация GET переменной lang по соображениям безопасности. Теперь, чтобы добавить новый язык, его нужно сначала прописать в классе в переменную $langAvailable.
* Исправлена небрежность в JavaScript-коде, который используется при активации адаптивного режима.
* Обновлена библиотека instagram-php-scraper до версии 0.8.6.
* Исправлена функция getMediasByTag библиотеки instagram-php-scraper, чтобы учитывать сценарий, когда при запросе данных по тегу в выдачу попадали не все доступные фотографии.

inWidget-1.1.4
Дата: 28 ноября 2017 г.

* Добавлен адаптивный режим.
* Добавлена GET переменная adaptive ( true / false, по умолчанию false ), которая позволяет включить адаптивный режим при обращении к скрипту.
* Добавлены скины: modern-blue, modern-green, modern-red, modern-orange, modern-grey, modern-black, modern-violet, modern-yellow.
* Добавлен параметр skinDefault в файл config.php. Позволяет задать скин по умолчанию.
* Добавлена GET переменная skin. Позволяет переопределить скин виджета при обращении к скрипту.

inWidget-1.1.3
Дата: 11 ноября 2017 г.

* Исправлен баг при использовании нескольких хештегов. Вывод производился только по последнему тегу, а не по всем перечисленным.
* Исправлен баг с блокировкой нежелательных аккаунтов.
* В настройки добавлена опция cacheSkip. Если присвоить ей true, то кэш будет проигнорирован и запросы к API будут отправляться при каждой загрузке виджета. Используйте эту опцию только для отладки.
* Теперь можно передать настройки виджета конструктору класса в качестве аргумента. Приоритет таких настроек выше, чем в файле config.php. Пример: $inWidget = new inWidget($config);
* Обновлена библиотека instagram-php-scraper до версии v0.8.5.

inWidget-1.1.2
Дата: 09 ноября 2017 г.

* Исправлена ошибка приводящая к повреждению данных в массиве. Воспроизводилась только в PHP 7.1.x.
* Обновлена библиотека instagram-php-scraper до версии v0.8.4.
* Изменены модификаторы доступа

inWidget-1.1.1
Дата: 08 ноября 2017 г.

* Эта версия исправляет ошибку загрузки фотографий (из-за того, что источник /media/ больше не доступен)
* Вывод фотографий по хэштегам снова работает
* Обновлена библиотека instagram-php-scraper до v0.8.0. Пришлось внести в неё изменения, чтобы избавиться от ошибки загрузки фото, убрать лишние зависимости, избавиться от необходимости использовать пароль при поиске по тегам. Для этого полностью переписал функции getMedias и getMediasByTag класса Instagram, добавил файл autoload.php в папку plugins для совместимости.

inWidget-1.1.0
Дата: 18 февраля 2017 г.

* Для работы виджета теперь требует PHP >= 5.4.0 с поддержкой библиотеки cURL
* Добавлена проверка на минимальные системные требования
* Отправка запросов и прасинг ответов от Instagram теперь осуществляется через библиотеку instagram-php-scraper (https://github.com/postaddictme/instagram-php-scraper)
* Удалены оригинальные функции класса inWidget отвечающие за отправку запросов и проверку ответов сервера.
* ACCESS_TOKEN упразднён и больше нигде не используется. Также больше не требуется регистрация своего приложения.
* Упразднены ошибки с номерами: 103, 401, 404, 405, 406, 407.
* Появилась ошибка с номером 500 - которая в большинстве случаев отдаёт текст ошибки сгенерированной библиотекой instagram-php-scraper.
* Виджет теперь может выводить любой открытый профиль, а не только ваш.
* Вывод фотографий по тегам снова стал глобальным, т.е. в выдачу будут попадать фото и других пользователей, а не только ваши.
* Теперь можно указать несколько хештегов через запятую.
* Теперь можно блокировать нежелательные аккаунты других пользователей через опцию bannedLogins в файле confing.php. Логины необходимо перечислить через запятую. Опция будет полезна при работе с хештегами.
* Имя кэш-файла теперь совпадает с логином пользователя. Благодаря этому виджет можно использовать с несколькими аккаунтами одновременно. Вам лишь необходимо решить, как вы будете менять значение переменной LOGIN в файле confing.php
* Теперь виджет может получать от сервера любое количество фотографий. Т.е. значение параметра imgCount может быть существенно больше 30 шт. Мне удалось получить 1000 шт. за один раз, но я крайне не рекомендую вводить экстремальные значения. 

inWidget-1.0.7
Дата: 24 декабря 2015 г.

* Запросы на получение данных теперь используют ACCESS TOKEN.
* CLIENT_ID упразднён и больше нигде не используется.
* Частично изменилась логика обработки ошибок
* Появились ошибки с номерами: 404, 405, 406, 407. Описание см. в документации.

inWidget-1.0.6 
Дата: 28 августа 2014 г.

* Теперь виджет умеет работать с хэш-тегами на кириллице и других нелатинских языках.
* Поля LOGIN, CLIENT_ID и langDefault стали обязательными для заполнения.
* Вывод ошибок PHP снова включён. Рекомендую выключать после настройки виджета в index.php

inWidget-1.0.5 
Дата: 27 августа 2014 г.

* Исправлена ошибка деления на ноль в случае если виджету передаются некорректные аргументы. 
* Вывод PHP ошибок отключен из соображений безопасности. Для отладки можно включить в index.php

inWidget-1.0.4 
Дата: 22 августа 2014 г.

* Случайный порядок фотографий можно выключить в config.php
* Отсутствие фотографий в профиле больше не является ошибкой.
* Виджет переведён на русский и английский язык. Появились файлы локализации.
* Язык по умолчанию можно указать в config.php
* Виджет научился автоматически определять язык пользователя. Можно отключить в config.php
* Можно изменить язык виджета с помощью $_GET переменной.
* Произведён небольшой рефакторинг кода.

inWidget-1.0.3 
Дата: 11 августа 2014 г.

Исправлена ошибка из-за которой виджет мог начать транслировать фотографии другого пользователя.

inWidget-1.0.2
Дата: 01 августа 2014 г.

Добавлена возможность вывода фотографий по хэш-тегу.

inWidget-1.0.1
Дата: 28 июля 2014 г.

* Переписан механизм кэширования. Теперь используется файл, а не база данных.
* Размер кэша уменьшен в 10 раз.
* Скорость работы виджета увеличилась в 2 раза.
* Ошибки стали более информативными. Появились коды ошибок и пояснения.
* Картинки оформления встроены прямо в CSS, чтобы уменьшить количество запросов к серверу.
* Улучшена стабильность, произведён рефекторинг кода и исправлены мелкие баги.

inWidget-1.0.0
Дата: 23 января 2014 г.

С этой версии всё началось. Кэширование производится в базу данных MySQL.
Актуальная инструкция для этой версии содержится в архиве.

// ----------------------------------------
// Ваши отзывы, вопросы и предложения:
// ----------------------------------------

Посетите сайт виджета: http://inwidget.ru
Пишите на aik@inwidget.ru или свяжитесь со мной Вконтакте http://vk.com/vanzan
Присоединяйтесь к разработке виджета на GitHub: https://github.com/aik27/inwidget
Статья о виджете на habrahabr: http://habrahabr.ru/post/223739/

// ----------------------------------------
// Поддержать проект:
// ----------------------------------------

inWidget - некоммерческий проект, который существует на голом энтузиазме. Поэтому любая поддержка приветствуется.

Все способы пожертвований доступны по этой ссылке: http://inwidget.ru/donate.php
А также на главной странице сайта http://inwidget.ru/

Прямой перевод можно сделать по следующим реквизитам:

--------- PayPal: aik@inwidget.ru

Спасибо!
 